generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  name        String?
  isAdmin     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Platform {
  id                     Int      @id @default(autoincrement()) // Our local ID
  
  // IGDB references - can be empty for manual platforms
  igdbPlatformId         Int?     // IGDB platform ID
  igdbPlatformVersionId  Int?     // IGDB platform version ID
  
  // Platform fields (from IgdbPlatform) - can override IGDB values if filled
  abbreviation           String?  // Platform abbreviation
  alternative_name       String?  // Alternative platform name
  generation             Int?     // Platform generation
  name                   String   // Platform name (required)
  platform_family        Int?     // IGDB Platform Family ID
  platform_type          Int?     // IGDB Platform Type ID
  
  // Platform version fields (from IgdbPlatformVersion) - can override IGDB values if filled
  companies              String?  // Array of company IDs (stored as JSON string)
  versionName            String?  // Platform version name (if different from main name)
  platform_logo_base64   String?  // Base64 encoded logo to avoid API calls
  
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

model UserPlatform {
  id         Int      @id @default(autoincrement())
  userId     Int
  platformId Int
  status     PlatformStatus // OWNED or WISHLISTED
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([userId, platformId, status]) // Prevent duplicates
}

model UserGame {
  id          Int      @id @default(autoincrement())
  userId      Int
  platformId  Int
  
  // Game details (from IGDB or user input)
  title       String
  description String?
  imageUrl    String?
  igdbId      Int?     // IGDB game ID if from API
  
  // Collection details
  status      GameStatus    // OWNED or WISHLISTED
  condition   GameCondition? // Only for owned games
  notes       String?       // User notes
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, platformId, igdbId, status]) // Prevent exact duplicates
}

model IgdbPlatformVersion {
  // IGDB platform_version data - using IGDB ID as primary key
  igdbId                          Int      @id // IGDB platform_version ID (id field) - PRIMARY KEY
  checksum                        String?  // Hash of the object
  companies                       String?  // Array of Platform Version Company IDs (stored as JSON string)
  connectivity                    String?  // The network capabilities
  cpu                            String?  // The integrated control processing unit
  graphics                       String?  // The graphics chipset
  main_manufacturer              Int?     // Reference ID for Platform Version Company
  media                          String?  // The type of media this version accepted
  memory                         String?  // How much memory there is
  name                           String   // The name of the platform version
  os                             String?  // The operating system installed on the platform version
  output                         String?  // The output video rate
  platform_logo                  Int?     // Reference ID for Platform Logo
  platform_version_release_dates String?  // Array of Platform Version Release Date IDs (stored as JSON string)
  resolutions                    String?  // The maximum resolution
  slug                           String?  // A url-safe, unique, lower-case version of the name
  sound                          String?  // The sound chipset
  storage                        String?  // How much storage there is
  summary                        String?  // A short summary
  url                            String?  // The website address (URL) of the item
  
  // Local metadata only
  lastSynced     DateTime @default(now())
  localCreatedAt DateTime @default(now())
  localUpdatedAt DateTime @updatedAt
}

model IgdbPlatform {
  // IGDB platform data - using IGDB ID as primary key
  igdbId           Int      @id // IGDB platform ID (id field) - PRIMARY KEY
  abbreviation     String?  // An abbreviation of the platform name
  alternative_name String?  // An alternative name for the platform
  category         Int?     // Category Enum (DEPRECATED! Use platform_type instead)
  checksum         String?  // Hash of the object
  created_at       DateTime? // Date this was initially added to the IGDB database
  generation       Int?     // The generation of the platform
  name             String   // The name of the platform
  platform_family  Int?     // Reference ID for Platform Family
  platform_logo    Int?     // Reference ID for Platform Logo
  platform_type    Int?     // Reference ID for Platform Type
  slug             String?  // A url-safe, unique, lower-case version of the name
  summary          String?  // The summary of the first Version of this platform
  updated_at       DateTime? // The last date this entry was updated in the IGDB database
  url              String?  // The website address (URL) of the item
  versions         String?  // Array of Platform Version IDs (stored as JSON string)
  websites         String?  // Array of Platform Website IDs (stored as JSON string)
  
  // Local metadata only
  lastSynced       DateTime @default(now())
  localCreatedAt   DateTime @default(now())
  localUpdatedAt   DateTime @updatedAt
}

model IgdbCompany {
  // IGDB company data - minimal data for company name resolution
  igdbId   Int    @id // IGDB company ID (id field) - PRIMARY KEY
  name     String // The name of the company
}

model IgdbPlatformFamily {
  // IGDB platform family data - minimal data for family name resolution
  igdbId   Int    @id // IGDB platform family ID (id field) - PRIMARY KEY
  name     String // The name of the platform family
  slug     String // A url-safe, unique, lower-case version of the name
}

model IgdbPlatformType {
  // IGDB platform type data - minimal data for type name resolution
  igdbId   Int    @id // IGDB platform type ID (id field) - PRIMARY KEY
  name     String // The name of the platform type
}

model IgdbPlatformLogo {
  // IGDB platform logo data - stores logo metadata from /platform_logos endpoint
  igdbId        Int     @id // IGDB platform logo ID (id field) - PRIMARY KEY
  alpha_channel Boolean? // Whether the logo has alpha channel
  animated      Boolean? // Whether the logo is animated
  checksum      String? // Hash of the object
  height        Int?    // The height of the logo in pixels
  image_id      String? // The ID used to construct IGDB logo URLs (e.g., "plnf")
  url           String? // The website address (URL) of the item
  width         Int?    // The width of the logo in pixels
  
  // Computed field for direct logo access
  computed_url  String? // Pre-computed IGDB logo URL (e.g., "https://images.igdb.com/igdb/image/upload/t_logo_med/plnf.png")
}

enum PlatformStatus {
  OWNED
  WISHLISTED
}

enum GameStatus {
  OWNED
  WISHLISTED
}

enum GameCondition {
  MINT         // Perfect condition
  NEAR_MINT    // Very minor wear
  EXCELLENT    // Light wear but fully functional
  VERY_GOOD    // Moderate wear but good condition
  GOOD         // Noticeable wear but works well
  FAIR         // Significant wear but functional
  POOR         // Heavy wear, may have issues
  SEALED       // Brand new, never opened
}
